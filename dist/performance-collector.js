(function(){"use strict";const o=e=>{console.log("Sending metric:",e);const n=window.wpSeoCheckPerformance&&window.wpSeoCheckPerformance.postId;if(!n){console.error("Post ID not available for performance metric.");return}fetch("/wp-json/wp-seo-check/v1/performance-metrics",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({post_id:n,name:e.name,value:e.value,id:e.id})}).then(r=>r.json()).then(r=>console.log("Metric sent successfully:",r)).catch(r=>console.error("Error sending metric:",r))},t=(e,n,r)=>{PerformanceObserver.supportedEntryTypes.includes(n)&&new PerformanceObserver(a=>{for(const s of a.getEntries())r({name:e,value:s.duration||s.value,id:s.name})}).observe({type:n,buffered:!0})};t("CLS","layout-shift",e=>{o(e)}),t("LCP","largest-contentful-paint",e=>{o(e)}),t("TTFB","navigation",e=>{const n=performance.getEntriesByType("navigation")[0];n&&o({name:"TTFB",value:n.responseStart-n.requestStart,id:n.name})}),window.addEventListener("load",()=>{(typeof PerformanceObserver>"u"||!PerformanceObserver.supportedEntryTypes.includes("first-input"))&&o({name:"FID",value:"N/A (Polyfill needed)",id:"fallback-fid"})})})();
